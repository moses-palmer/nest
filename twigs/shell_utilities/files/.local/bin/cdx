#!/bin/sh
#
# Temporarily decompresses an archive, opens a new shell, and cleans up when it
# terminates.

set -e


##
# The archive to explore.
export __CDX_SOURCE="$(realpath "$1")"


##
# Decompresses a file.
#
# $1: The file to decompress.
# $2: The target directory.
decompress() {
    file="$1"
    target="$2"

    mime_type="$(file --brief --mime-type "$file")"

    printf "\033[1mDecompressing \033[0;32m$file\033[0m\033[1m...\033[0m\n"
    case "$mime_type" in
        application/zip|application/java-archive)
            unzip "$file" -d "$target" >/dev/null
            export __CDX_WRITEBACK="zip -r \"$file\" ."
            ;;
        application/*gzip|application/*xz|application/*tar)
            tar xf "$file" -C "$target" >/dev/null
            export __CDX_WRITEBACK="tar czf \"$file\" ."
            ;;
        application/*rpm)
            rpm2cpio "$file" | ( \
                cd "$target"; \
                cpio \
                --extract \
                --make-directories \
                --preserve-modification-time )
            ;;
        *)
            printf "\033[0;31mUnknown archive type:\033[0m $mime_type\n"
            exit 2
            ;;
    esac
}


##
# Launches a new shell in a directory.
#
# $1: The source file.
# $2: The target directory.
enter() {
    source="$1"
    target="$2"

    cd "$target"
    if [ -n "$TMUX" ] && [ -z "$CDX_NO_TMUX"]; then
        tmux split-window -d -h -c "$target" \
            "sh -c 'tree -aC | less -R'"
    fi
    if [ -n "$__CDX_WRITEBACK" ]; then
        export PS1_PREFIX="\033[4;90m$__CDX_SOURCE\033[0m\n"
        printf "\033[1mRun \033[3mcdx-write \033[1mto update the archive\033[0m\n"
    else
        export PS1_PREFIX="\033[4;90m$__CDX_SOURCE (read-only)\033[0m\n"
    fi
    $SHELL
}


##
# Performs cleanup.
#
# If the archive format supports updating, changes are written back to the
# archive.
finally() {
    printf "\033[1mRemoving \033[0;31m$__CDX_TARGET\033[0m\033[1m...\033[0m\n"
    rm -rf "$__CDX_TARGET"
}


# Make sure a file is passed
if [ -z "$__CDX_SOURCE" ]; then
    echo "Usage: $(basename "$0") FILE"
    exit 1
elif [ ! -f "$__CDX_SOURCE" ]; then
    echo "$__CDX_SOURCE is not a file."
    exit 1
fi


# Decompress the file to a temporary directory
export __CDX_TARGET="$(mktemp --directory)"
trap finally EXIT
decompress "$__CDX_SOURCE" "$__CDX_TARGET"


# Open a new shell
enter "$__CDX_SOURCE" "$target"
